{
    "name": "mindustry-logic",
    "publisher": "vortetty",
    "displayName": "Mindustry Logic",
    "description": "Mindustry logic assembly highlighting + (incomplete) Compiler [(made by Superstormer)](https://github.com/SuperStormer/c2logic)",
    "version": "2.1.0",
    "license": "Apache 2.0",
    "repository": {
        "type": "git",
        "url": "https://github.com/Vortetty/mindustry-logic-vscode-extension"
    },
    "engines": {
        "vscode": "^1.66.0"
    },
    "categories": [
        "Programming Languages",
        "Other"
    ],
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "lint": "eslint . --ext .ts,.tsx",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run lint",
        "test": "npm run compile && code --extensionDevelopmentPath=$(realpath .)"
    },
    "main": "./out/extension.js",
    "contributes": {
        "configurationDefaults": {
            "[mlog]": {
                "editor.semanticHighlighting.enabled": true
            }
        },
        "languages": [
            {
                "id": "mlog",
                "aliases": [
                    "Mindustry Logic",
                    "MLOG"
                ],
                "extensions": [
                    ".mlog",
                    ".masm"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "semanticTokenTypes": [
            {
                "id": "mlog_method",
                "superType": "method",
                "description": "Instructions (e.g. sensor, op, etc.)"
            },
            {
                "id": "mlog_keyword",
                "superType": "keyword",
                "description": "Keywords (e.g. pwr, xor, etc.)"
            },
            {
                "id": "mlog_parameter",
                "superType": "parameter",
                "description": "Parameters (e.g. node1)"
            },
            {
                "id": "mlog_variable",
                "superType": "variable",
                "description": "Variables set by user, also built-in constants"
            },
            {
                "id": "mlog_string",
                "superType": "string",
                "description": "Strings (e.g. \"Hello World\", 'Hello World')"
            },
            {
                "id": "mlog_number",
                "superType": "number",
                "description": "Numbers (e.g. 123, -123, 0.123)"
            },
            {
                "id": "mlog_comment",
                "superType": "comment",
                "description": "Comments (e.g. # <comment text>)"
            }
        ],
        "semanticTokenModifiers": [
            {
                "id": "mlog_invalid",
                "description": "Invalid parameter type or syntax"
            },
            {
                "id": "mlog_unknown",
                "description": "Unknown parameter but correct type"
            }
        ],
        "commands": [
            {
                "command": "mindustry-logic.compileLogicO0",
                "title": "Compile logic file (unoptimized)"
            },
            {
                "command": "mindustry-logic.compileLogicO1",
                "title": "Compile logic file (no temp vars)"
            },
            {
                "command": "mindustry-logic.compileLogicO2",
                "title": "Compile logic file (no temp vars, remove unused functions)"
            },
            {
                "command": "mindustry-logic.compileLogicO3",
                "title": "Compile logic file (no temp vars, remove unused functions, other potentially unsafe optimizations)"
            },
            {
                "command": "mindustry-logic.createIncludes",
                "title": "Create c2logic include headers"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "mindustry-logic.compileLogicO0",
                    "when": "editorLangId == 'c'"
                },
                {
                    "command": "mindustry-logic.compileLogicO1",
                    "when": "editorLangId == 'c'"
                },
                {
                    "command": "mindustry-logic.compileLogicO2",
                    "when": "editorLangId == 'c'"
                },
                {
                    "command": "mindustry-logic.compileLogicO3",
                    "when": "editorLangId == 'c'"
                },
                {
                    "command": "mindustry-logic.createIncludes"
                }
            ]
        }
    },
    "activationEvents": [
        "onCommand:mindustry-logic.compileLogicO0",
        "onCommand:mindustry-logic.compileLogicO1",
        "onCommand:mindustry-logic.compileLogicO2",
        "onCommand:mindustry-logic.compileLogicO3",
        "onCommand:mindustry-logic.createIncludes",
        "onLanguage:mlog"
    ],
    "devDependencies": {
        "@types/glob": "^7.2.0",
        "@types/mocha": "^9.1.0",
        "@types/node": "14.x",
        "@types/vscode": "^1.66.0",
        "@typescript-eslint/eslint-plugin": "^5.19.0",
        "@typescript-eslint/parser": "^5.19.0",
        "@vscode/test-electron": "^2.1.3",
        "eslint": "^8.11.0",
        "glob": "^7.2.0",
        "mocha": "^9.2.2",
        "typescript": "^4.5.5"
    },
    "dependencies": {
        "child_process": "^1.0.2",
        "wait-forever": "^1.0.0"
    }
}
